ï
ID:\_cloud\Dropbox\Projects\SpecDrill\SpecDrill\SpecDrill\FindAttribute.cs
	namespace 	
	SpecDrill
 
{		 
[

 
AttributeUsage

 
(

 
AttributeTargets

 $
.

$ %
Field

% *
|

+ ,
AttributeTargets

- =
.

= >
Property

> F
,

F G
AllowMultiple

H U
=

V W
false

X ]
,

] ^
	Inherited

_ h
=

i j
false

k p
)

p q
]

q r
public 

class 
FindAttribute 
:  
	Attribute! *
{ 
public 
By 
SelectorType 
{  
get! $
;$ %
}& '
public 
string 
SelectorValue #
{$ %
get& )
;) *
}+ ,
public 
bool 
Nested 
{ 
get  
;  !
set" %
;% &
}' (
=) *
true+ /
;/ 0
public 
FindAttribute 
( 
By 
selectorType  ,
,, -
string. 4
selectorValue5 B
)B C
{ 	
this 
. 
SelectorType 
= 
selectorType  ,
;, -
this 
. 
SelectorValue 
=  
selectorValue! .
;. /
} 	
} 
} ⁄
[D:\_cloud\Dropbox\Projects\SpecDrill\SpecDrill\SpecDrill\AutomationScopes\BenchmarkScope.cs
	namespace

 	
	SpecDrill


 
.

 
AutomationScopes

 $
{ 
public 

sealed 
class 
BenchmarkScope &
:' (
IDisposable) 4
{ 
private 
readonly 
ILogger  
Log! $
=% &
Infrastructure' 5
.5 6
Logging6 =
.= >
Log> A
.A B
GetB E
<E F
BenchmarkScopeF T
>T U
(U V
)V W
;W X
private 
readonly 
	Stopwatch "
	stopwatch# ,
;, -
private 
readonly 
string 
description  +
;+ ,
public 
BenchmarkScope 
( 
string $
description% 0
)0 1
{ 	
this 
. 
description 
= 
description *
;* +
	stopwatch 
= 
new 
	Stopwatch %
(% &
)& '
;' (
Log 
. 
Info 
( 
string 
. 
Format "
(" #
$str# ?
,? @
descriptionA L
)L M
)M N
;N O
	stopwatch 
. 
Start 
( 
) 
; 
} 	
public 
TimeSpan 
Elapsed 
{  !
get 
{ 
return 
	stopwatch "
." #
Elapsed# *
;* +
}, -
} 	
public!! 
void!! 
Dispose!! 
(!! 
)!! 
{"" 	
	stopwatch## 
.## 
Stop## 
(## 
)## 
;## 
Log$$ 
.$$ 
Info$$ 
($$ 
string$$ 
.$$ 
Format$$ "
($$" #
$str$$# M
,$$M N
description$$O Z
,$$Z [
	stopwatch$$\ e
.$$e f
Elapsed$$f m
)$$m n
)$$n o
;$$o p
}%% 	
}&& 
}'' Á 
^D:\_cloud\Dropbox\Projects\SpecDrill\SpecDrill\SpecDrill\AutomationScopes\ImplicitWaitScope.cs
	namespace 	
	SpecDrill
 
. 
AutomationScopes $
{ 
public		 

sealed		 
class		 
ImplicitWaitScope		 )
:		* +
IDisposable		, 7
{

 
private 
ILogger 
Log 
= 
Infrastructure ,
., -
Logging- 4
.4 5
Log5 8
.8 9
Get9 <
<< =
ImplicitWaitScope= N
>N O
(O P
)P Q
;Q R
private 
string 
message 
=  
null! %
;% &
private 
IBrowserDriver 
browser &
=' (
null) -
;- .
private 
Stack 
< 
TimeSpan 
> 
timeoutHistory  .
=/ 0
null1 5
;5 6
public 
ImplicitWaitScope  
(  !
IBrowserDriver! /
browser0 7
,7 8
Stack9 >
<> ?
TimeSpan? G
>G H
timeoutHistoryI W
,W X
TimeSpanY a
timeoutb i
,i j
stringk q
messager y
=z {
null	| Ä
)
Ä Å
{ 	
this 
. 
message 
= 
message "
;" #
this 
. 
browser 
= 
browser "
;" #
this 
. 
timeoutHistory 
=  !
timeoutHistory" 0
;0 1
lock 
( 
timeoutHistory  
)  !
{ 
timeoutHistory 
. 
Push #
(# $
timeout$ +
)+ ,
;, -
browser 
. &
ChangeBrowserDriverTimeout 2
(2 3
timeout3 :
): ;
;; <
Log 
. 
Info 
( 
string 
.  
Format  &
(& '
$str' S
,S T
timeoutU \
,\ ]
message^ e
??f h
stringi o
.o p
Emptyp u
)u v
)v w
;w x
} 
} 	
public 
void 
Dispose 
( 
) 
{ 	
TimeSpan   
previousTimeout   $
;  $ %
lock!! 
(!! 
timeoutHistory!!  
)!!  !
{"" 
previousTimeout## 
=##  !
timeoutHistory##" 0
.##0 1
Pop##1 4
(##4 5
)##5 6
;##6 7
browser$$ 
.$$ &
ChangeBrowserDriverTimeout$$ 2
($$2 3
previousTimeout$$3 B
)$$B C
;$$C D
}%% 
Log'' 
.'' 
Info'' 
('' 
string'' 
.'' 
Format'' "
(''" #
$str''# T
,''T U
previousTimeout''V e
,''e f
message''g n
??''o q
string''r x
.''x y
Empty''y ~
)''~ 
)	'' Ä
;
''Ä Å
}(( 	
public** 
static** 
ImplicitWaitScope** '
Create**( .
(**. /
IBrowserDriver**/ =
driver**> D
,**D E
Stack**F K
<**K L
TimeSpan**L T
>**T U
timeoutHistory**V d
,**d e
TimeSpan**f n
timeout**o v
,**v w
string**x ~
message	** Ü
=
**á à
null
**â ç
)
**ç é
{++ 	
return,, 
new,, 
ImplicitWaitScope,, (
(,,( )
driver,,) /
,,,/ 0
timeoutHistory,,1 ?
,,,? @
timeout,,A H
,,,H I
message,,J Q
),,Q R
;,,R S
}-- 	
}.. 
}// ≠…
CD:\_cloud\Dropbox\Projects\SpecDrill\SpecDrill\SpecDrill\Browser.cs
	namespace 	
	SpecDrill
 
{ 
public 

sealed 
class 
Browser 
:  !
IBrowser" *
{ 
private 
static 
IBrowser 
browserInstance  /
;/ 0
private 
readonly 
Settings !
configuration" /
;/ 0
private 
ILogger 
Log 
= 
Infrastructure ,
., -
Logging- 4
.4 5
Log5 8
.8 9
Get9 <
<< =
Browser= D
>D E
(E F
)F G
;G H
private 
readonly 
IBrowserDriver '
browserDriver( 5
;5 6
private   
static   
readonly   
Stack    %
<  % &
TimeSpan  & .
>  . /
timeoutHistory  0 >
=  ? @
new  A D
Stack  E J
<  J K
TimeSpan  K S
>  S T
(  T U
)  U V
;  V W
public"" 
Browser"" 
("" 
Settings"" 
configuration""  -
)""- .
{## 	
Trace$$ 
.$$ 
Write$$ 
($$ 
$"$$ 
Configuration = $$ *
{$$* +
($$+ ,
configuration$$, 9
?$$9 :
.$$: ;
ToString$$; C
($$C D
)$$D E
??$$F H
$str$$I Q
)$$Q R
}$$R S
"$$S T
)$$T U
;$$U V
if%% 
(%% 
configuration%% 
==%%  
null%%! %
)%%% &
throw&& 
new&& 
	Exception&& #
(&&# $
$str&&$ ?
)&&? @
;&&@ A
this(( 
.(( 
configuration(( 
=((  
configuration((! .
;((. /
Log)) 
.)) 
Info)) 
()) 
$str)) -
)))- .
;)). /
var** 
driverFactory** 
=** 
new**  #"
SeleniumBrowserFactory**$ :
(**: ;
configuration**; H
)**H I
;**I J
var,, 
browserName,, 
=,, 
this,, "
.,," #
configuration,,# 0
.,,0 1
	WebDriver,,1 :
.,,: ;
BrowserDriver,,; H
.,,H I
ToEnum,,I O
<,,O P
BrowserNames,,P \
>,,\ ]
(,,] ^
),,^ _
;,,_ `
Log-- 
.-- 
Info-- 
(-- 
$"-- &
WebDriver.BrowserDriver = -- 1
{--1 2
browserName--2 =
}--= >
"--> ?
)--? @
;--@ A
browserDriver.. 
=.. 
driverFactory.. )
...) *
Create..* 0
(..0 1
browserName..1 <
)..< =
;..= >
Log11 
.11 
Info11 
(11 
$"11 (
BrowserWindow.IsMaximized = 11 3
{113 4
configuration114 A
.11A B
BrowserWindow11B O
.11O P
IsMaximized11P [
}11[ \
"11\ ]
)11] ^
;11^ _
if33 
(33 
configuration33 
.33 
BrowserWindow33 +
.33+ ,
IsMaximized33, 7
)337 8
{44 
MaximizePage55 
(55 
)55 
;55 
}66 
else77 
{88 
SetWindowSize99 
(99 
configuration99 +
.99+ ,
BrowserWindow99, 9
.999 :
InitialWidth99: F
??99G I
$num99J M
,99M N
configuration99O \
.99\ ]
BrowserWindow99] j
.99j k
InitialHeight99k x
??99y {
$num99| 
)	99 Ä
;
99Ä Å
}:: 
long<< 
waitMilliseconds<< !
=<<" #
configuration<<$ 1
.<<1 2
MaxWait<<2 9
==<<: <
$num<<= >
?<<? @
$num<<A F
:<<G H
configuration<<I V
.<<V W
MaxWait<<W ^
;<<^ _
Log== 
.== 
Info== 
(== 
$"== 

MaxWait = == !
{==! "
waitMilliseconds==" 2
}==2 3
ms==3 5
"==5 6
)==6 7
;==7 8
var>> 

cfgMaxWait>> 
=>> 
TimeSpan>> %
.>>% &
FromMilliseconds>>& 6
(>>6 7
configuration>>7 D
.>>D E
MaxWait>>E L
==>>M O
$num>>P Q
?>>R S
$num>>T Y
:>>Z [
configuration>>\ i
.>>i j
MaxWait>>j q
)>>q r
;>>r s
lockAA 
(AA 
timeoutHistoryAA  
)AA  !
{BB 
timeoutHistoryCC 
.CC 
PushCC #
(CC# $

cfgMaxWaitCC$ .
)CC. /
;CC/ 0
browserDriverDD 
.DD &
ChangeBrowserDriverTimeoutDD 8
(DD8 9

cfgMaxWaitDD9 C
)DDC D
;DDD E
}EE 
browserInstanceGG 
=GG 
thisGG "
;GG" #
}HH 	
publicJJ 
voidJJ 
SetWindowSizeJJ !
(JJ! "
intJJ" %
initialWidthJJ& 2
,JJ2 3
intJJ4 7
initialHeightJJ8 E
)JJE F
{KK 	
thisLL 
.LL 
browserDriverLL 
.LL 
SetWindowSizeLL ,
(LL, -
initialWidthLL- 9
,LL9 :
initialHeightLL; H
)LLH I
;LLI J
}MM 	
publicOO 
staticOO 
IBrowserOO 
InstanceOO '
=>OO( *
browserInstanceOO+ :
;OO: ;
publicQQ 
TQQ 
OpenQQ 
<QQ 
TQQ 
>QQ 
(QQ 
)QQ 
whereRR 
TRR 
:RR 
IPageRR 
{SS 	
varTT 
homePageTT 
=TT 
configurationTT (
.TT( )
	HomepagesTT) 2
.TT2 3
FirstOrDefaultTT3 A
(TTA B
homepageTTB J
=>TTK M
homepageTTN V
.TTV W
PageObjectTypeTTW e
==TTf h
typeofTTi o
(TTo p
TTTp q
)TTq r
.TTr s
NameTTs w
)TTw x
;TTx y
ifUU 
(UU 
homePageUU 
!=UU 
nullUU  
)UU  !
{VV 
stringWW 
urlWW 
=WW 
stringWW #
.WW# $
FormatWW$ *
(WW* +
$strWW+ ;
,WW; <
PathXX  
.XX  !
GetDirectoryNameXX! 1
(XX1 2
SystemXX2 8
.XX8 9

ReflectionXX9 C
.XXC D
AssemblyXXD L
.XXL M 
GetExecutingAssemblyXXM a
(XXa b
)XXb c
.XXc d
LocationXXd l
)XXl m
.XXm n
ReplaceXXn u
(XXu v
$charXXv z
,XXz {
$charXX| 
)	XX Ä
,
XXÄ Å
homePageYY $
.YY$ %
UrlYY% (
)YY( )
;YY) *
LogZZ 
.ZZ 
InfoZZ 
(ZZ 
$"ZZ 
Browser openins ZZ +
{ZZ+ ,
urlZZ, /
}ZZ/ 0
"ZZ0 1
)ZZ1 2
;ZZ2 3
Action[[ 
navigateToUrl[[ $
=[[% &
homePage[[' /
.[[/ 0
IsFileSystemPath[[0 @
?[[A B
(\\ 
Action\\ 
)\\ 
(\\ 
(\\ 
)\\ 
=>\\  "
this]] 
.]] 
GoToUrl]]  
(]]  !
url]]! $
)]]$ %
)]]% &
:]]' (
(]]) *
)]]* +
=>]], .
this]]/ 3
.]]3 4
GoToUrl]]4 ;
(]]; <
homePage]]< D
.]]D E
Url]]E H
)]]H I
;]]I J
navigateToUrl__ 
(__ 
)__ 
;__  
varaa 

targetPageaa 
=aa  
thisaa! %
.aa% &

CreatePageaa& 0
<aa0 1
Taa1 2
>aa2 3
(aa3 4
)aa4 5
;aa5 6
Waitcc 
.cc 
	WithRetrycc 
(cc 
)cc  
.cc  !
Doingcc! &
(cc& '
navigateToUrlcc' 4
)cc4 5
.cc5 6
Untilcc6 ;
(cc; <
(cc< =
)cc= >
=>cc? A

targetPageccB L
.ccL M
IsLoadedccM U
)ccU V
;ccV W

targetPagedd 
.dd 
WaitForSilencedd )
(dd) *
)dd* +
;dd+ ,
returnee 

targetPageee !
;ee! "
}ff 
stringgg 
errMsggg 
=gg 
$"gg 
SpecDrill: Page(gg .
{gg. /
typeofgg0 6
(gg6 7
Tgg7 8
)gg8 9
.gg9 :
Namegg: >
}gg? @D
8) cannot be found in Homepages section of settings file.gg@ x
"ggx y
;ggy z
Loghh 
.hh 
Infohh 
(hh 
errMsghh 
)hh 
;hh 
throwii 
newii 
	Exceptionii 
(ii  
errMsgii  &
)ii& '
;ii' (
}jj 	
publicll 
Tll 

CreatePagell 
<ll 
Tll 
>ll 
(ll 
)ll  
wherell! &
Tll' (
:ll) *
IPagell+ 0
=>ll1 3
CreateContainerll4 C
<llC D
TllD E
>llE F
(llF G
)llG H
;llH I
publicmm 
Tmm 
CreateControlmm 
<mm 
Tmm  
>mm  !
(mm! "
Tmm" #
fromInstancemm$ 0
)mm0 1
wheremm2 7
Tmm8 9
:mm: ;
IElementmm< D
=>mmE G
CreateContainermmH W
<mmW X
TmmX Y
>mmY Z
(mmZ [
fromInstancemm[ g
)mmg h
;mmh i
privateoo 
Too 
CreateContaineroo !
<oo! "
Too" #
>oo# $
(oo$ %
Too% &
containerInstanceoo' 8
=oo9 :
defaultoo; B
(ooB C
TooC D
)ooD E
)ooE F
wherepp 
Tpp 
:pp 
IElementpp 
{qq 	
varrr 
	containerrr 
=rr #
EnsureContainerInstancerr 3
(rr3 4
containerInstancerr4 E
)rrE F
;rrF G
Typett 
containerTypett 
=tt  
typeoftt! '
(tt' (
Ttt( )
)tt) *
;tt* +
containerTypevv 
.vv 

GetMembersvv $
(vv$ %
)vv% &
.ww 
Whereww 
(ww 
memberww 
=>ww  
memberww! '
.ww' (

MemberTypeww( 2
==ww3 5
MemberTypesww6 A
.wwA B
PropertywwB J
||wwK M
memberwwN T
.wwT U

MemberTypewwU _
==ww` b
MemberTypeswwc n
.wwn o
Fieldwwo t
)wwt u
.xx 
ToListxx 
(xx 
)xx 
.yy 
ForEachyy 
(yy 
memberzz 
=>zz 
{{{ 
var|| 

memberType|| "
=||# $
GetMemberType||% 2
(||2 3
member||3 9
)||9 :
;||: ;
var}} 
memberAttributes}} (
=}}) *
member}}+ 1
.}}1 2
GetCustomAttributes}}2 E
<}}E F
FindAttribute}}F S
>}}S T
(}}T U
false}}U Z
)}}Z [
.~~ 
ToList~~ 
(~~ 
)~~ 
;~~ 
if
ÄÄ 
(
ÄÄ 
memberAttributes
ÄÄ (
.
ÄÄ( )
Any
ÄÄ) ,
(
ÄÄ, -
)
ÄÄ- .
)
ÄÄ. /
{
ÅÅ 
var
ÇÇ 
memberValue
ÇÇ '
=
ÇÇ( )
GetMemberValue
ÇÇ* 8
(
ÇÇ8 9
member
ÇÇ9 ?
,
ÇÇ? @
	container
ÇÇA J
)
ÇÇJ K
;
ÇÇK L
if
ÑÑ 
(
ÑÑ 
memberValue
ÑÑ '
!=
ÑÑ( *
null
ÑÑ+ /
)
ÑÑ/ 0
return
ÖÖ "
;
ÖÖ" #
memberAttributes
áá (
.
àà 
ForEach
àà  
(
ââ 
findAttribute
ää )
=>
ää* ,
{
ãã 
object
åå  &
element
åå' .
=
åå/ 0
null
åå1 5
;
åå5 6
if
éé  "
(
éé# $

memberType
éé$ .
==
éé/ 1
typeof
éé2 8
(
éé8 9
IElement
éé9 A
)
ééA B
)
ééB C
{
èè  !
element
êê$ +
=
êê, -

WebElement
êê. 8
.
êê8 9
Create
êê9 ?
(
êê? @
findAttribute
êê@ M
.
êêM N
Nested
êêN T
?
êêU V
	container
êêW `
:
êêa b
default
êêc j
(
êêj k
T
êêk l
)
êêl m
,
êêm n
ElementLocator
ëë( 6
.
ëë6 7
Create
ëë7 =
(
ëë= >
findAttribute
ëë> K
.
ëëK L
SelectorType
ëëL X
,
ëëX Y
findAttribute
ëëZ g
.
ëëg h
SelectorValue
ëëh u
)
ëëu v
)
ëëv w
;
ëëw x
}
íí  !
else
ìì  $
if
ìì% '
(
ìì( )

memberType
ìì) 3
==
ìì4 6
typeof
ìì7 =
(
ìì= >
ISelectElement
ìì> L
)
ììL M
)
ììM N
{
îî  !
element
ïï$ +
=
ïï, -

WebElement
ïï. 8
.
ïï8 9
CreateSelect
ïï9 E
(
ïïE F
findAttribute
ïïF S
.
ïïS T
Nested
ïïT Z
?
ïï[ \
	container
ïï] f
:
ïïg h
default
ïïi p
(
ïïp q
T
ïïq r
)
ïïr s
,
ïïs t
ElementLocator
ññ( 6
.
ññ6 7
Create
ññ7 =
(
ññ= >
findAttribute
ññ> K
.
ññK L
SelectorType
ññL X
,
ññX Y
findAttribute
ññZ g
.
ññg h
SelectorValue
ññh u
)
ññu v
)
ññv w
;
ññw x
}
óó  !
else
òò  $
if
òò% '
(
òò( )
typeof
òò) /
(
òò/ 0 
INavigationElement
òò0 B
<
òòB C
IPage
òòC H
>
òòH I
)
òòI J
.
òòJ K
IsAssignableFrom
òòK [
(
òò[ \

memberType
òò\ f
)
òòf g
)
òòg h
{
ôô  !
element
öö$ +
=
öö, -!
InvokeFactoryMethod
öö. A
(
ööA B
$str
ööB T
,
ööT U

memberType
ööV `
.
öö` a"
GenericTypeArguments
ööa u
,
ööu v
	containerööw Ä
,ööÄ Å
findAttributeööÇ è
)ööè ê
;ööê ë
}
õõ  !
else
úú  $
if
úú% '
(
úú( )
typeof
úú) /
(
úú/ 0
IFrameElement
úú0 =
<
úú= >
IPage
úú> C
>
úúC D
)
úúD E
.
úúE F
IsAssignableFrom
úúF V
(
úúV W

memberType
úúW a
)
úúa b
)
úúb c
{
ùù  !
element
ûû$ +
=
ûû, -!
InvokeFactoryMethod
ûû. A
(
ûûA B
$str
ûûB O
,
ûûO P

memberType
ûûQ [
.
ûû[ \"
GenericTypeArguments
ûû\ p
,
ûûp q
	container
ûûr {
,
ûû{ |
findAttributeûû} ä
)ûûä ã
;ûûã å
}
üü  !
else
††  $
if
††% '
(
††( )
typeof
††) /
(
††/ 0
IWindowElement
††0 >
<
††> ?
IPage
††? D
>
††D E
)
††E F
.
††F G
IsAssignableFrom
††G W
(
††W X

memberType
††X b
)
††b c
)
††c d
{
°°  !
element
¢¢$ +
=
¢¢, -!
InvokeFactoryMethod
¢¢. A
(
¢¢A B
$str
¢¢B P
,
¢¢P Q

memberType
¢¢R \
.
¢¢\ ]"
GenericTypeArguments
¢¢] q
,
¢¢q r
	container
¢¢s |
,
¢¢| }
findAttribute¢¢~ ã
)¢¢ã å
;¢¢å ç
}
££  !
else
§§  $
if
§§% '
(
§§( )
typeof
§§) /
(
§§/ 0

WebControl
§§0 :
)
§§: ;
.
§§; <
IsAssignableFrom
§§< L
(
§§L M

memberType
§§M W
)
§§W X
)
§§X Y
{
••  !
if
¶¶$ &
(
¶¶' (

memberType
¶¶( 2
.
¶¶2 3
GetInterfaces
¶¶3 @
(
¶¶@ A
)
¶¶A B
.
¶¶B C
Any
¶¶C F
(
¶¶F G
x
¶¶G H
=>
¶¶I K
x
¶¶L M
.
¶¶M N
IsGenericType
¶¶N [
&&
¶¶\ ^
x
¶¶_ `
.
¶¶` a&
GetGenericTypeDefinition
¶¶a y
(
¶¶y z
)
¶¶z {
==
¶¶| ~
typeof¶¶ Ö
(¶¶Ö Ü
IListElement¶¶Ü í
<¶¶í ì
>¶¶ì î
)¶¶î ï
)¶¶ï ñ
)¶¶ñ ó
{
ßß$ %
element
®®( /
=
®®0 1!
InvokeFactoryMethod
®®2 E
(
®®E F
$str
®®F R
,
®®R S

memberType
®®T ^
.
®®^ _"
GenericTypeArguments
®®_ s
,
®®s t
	container
®®u ~
,
®®~ 
findAttribute®®Ä ç
)®®ç é
;®®é è
}
©©$ %
else
™™$ (
{
´´$ %
element
¨¨( /
=
¨¨0 1!
InvokeFactoryMethod
¨¨2 E
(
¨¨E F
$str
¨¨F U
,
¨¨U V
new
¨¨W Z
Type
¨¨[ _
[
¨¨_ `
]
¨¨` a
{
¨¨b c

memberType
¨¨d n
}
¨¨o p
,
¨¨p q
	container
¨¨r {
,
¨¨{ |
findAttribute¨¨} ä
)¨¨ä ã
;¨¨ã å
}
≠≠$ %
}
ÆÆ  !
SetValue
∞∞  (
(
∞∞( )
containerType
∞∞) 6
,
∞∞6 7
member
∞∞8 >
,
∞∞> ?
instance
∞∞@ H
:
∞∞H I
	container
∞∞J S
,
∞∞S T
value
∞∞U Z
:
∞∞Z [
element
∞∞\ c
)
∞∞c d
;
∞∞d e
}
±± 
)
≤≤ 
;
≤≤ 
}
≥≥ 
}
¥¥ 
)
¥¥ 
;
¥¥ 
return
µµ 
(
µµ 
T
µµ 
)
µµ 
	container
µµ 
;
µµ  
}
∂∂ 	
private
∏∏ 
IElement
∏∏ %
EnsureContainerInstance
∏∏ 0
<
∏∏0 1
T
∏∏1 2
>
∏∏2 3
(
∏∏3 4
T
∏∏4 5
containerInstance
∏∏6 G
)
∏∏G H
where
∏∏I N
T
∏∏O P
:
∏∏Q R
IElement
∏∏S [
{
ππ 	
try
∫∫ 
{
ªª 
return
ºº 
(
ºº 
(
ºº 
IElement
ºº !
)
ºº! "
containerInstance
ºº" 3
??
ºº4 6
(
ºº7 8
T
ºº8 9
)
ºº9 :
	Activator
ºº: C
.
ººC D
CreateInstance
ººD R
(
ººR S
typeof
ººS Y
(
ººY Z
T
ººZ [
)
ºº[ \
)
ºº\ ]
)
ºº] ^
;
ºº^ _
}
ΩΩ 
catch
ææ 
(
ææ $
MissingMethodException
ææ )
mme
ææ* -
)
ææ- .
{
øø 
throw
¿¿ 
new
¿¿ 
	Exception
¿¿ #
(
¿¿# $
$"
¿¿$ &
SpecDrill: Page (
¿¿& 7
{
¿¿7 8
typeof
¿¿8 >
(
¿¿> ?
T
¿¿? @
)
¿¿@ A
.
¿¿A B
Name
¿¿B F
}
¿¿F GÀ
ª) does not have a prameterless constructor. This error happens when you define at least one constructor with parameters. Possible Solution: Explicitly declare a parameterless constructor.¿¿G Ç
"¿¿Ç É
,¿¿É Ñ
mme¿¿Ö à
)¿¿à â
;¿¿â ä
}
¡¡ 
}
¬¬ 	
private
ƒƒ 
static
ƒƒ 
object
ƒƒ !
InvokeFactoryMethod
ƒƒ 1
<
ƒƒ1 2
T
ƒƒ2 3
>
ƒƒ3 4
(
ƒƒ4 5
string
ƒƒ5 ;

methodName
ƒƒ< F
,
ƒƒF G
Type
ƒƒH L
[
ƒƒL M
]
ƒƒM N"
genericTypeArguments
ƒƒO c
,
ƒƒc d
T
ƒƒe f
page
ƒƒg k
,
ƒƒk l
FindAttribute
ƒƒm z
findAttributeƒƒ{ à
)ƒƒà â
whereƒƒä è
Tƒƒê ë
:ƒƒí ì
IElementƒƒî ú
{
≈≈ 	
object
∆∆ 
element
∆∆ 
;
∆∆ 

MethodInfo
«« 
method
«« 
=
«« 
typeof
««  &
(
««& '

WebElement
««' 1
)
««1 2
.
««2 3
	GetMethod
««3 <
(
««< =

methodName
««= G
,
««G H
BindingFlags
««I U
.
««U V
Static
««V \
|
««] ^
BindingFlags
««_ k
.
««k l
Public
««l r
)
««r s
;
««s t

MethodInfo
»» 
generic
»» 
=
»»  
method
»»! '
.
»»' (
MakeGenericMethod
»»( 9
(
»»9 :"
genericTypeArguments
»»: N
)
»»N O
;
»»O P
element
…… 
=
…… 
generic
…… 
.
…… 
Invoke
…… $
(
……$ %
null
……% )
,
……) *
new
……+ .
object
……/ 5
[
……5 6
]
……6 7
{
……8 9
findAttribute
  $ 1
.
  1 2
Nested
  2 8
?
  9 :
page
  ; ?
:
  @ A
default
  B I
(
  I J
T
  J K
)
  K L
,
  L M
ElementLocator
ÀÀ$ 2
.
ÀÀ2 3
Create
ÀÀ3 9
(
ÀÀ9 :
findAttribute
ÀÀ: G
.
ÀÀG H
SelectorType
ÀÀH T
,
ÀÀT U
findAttribute
ÀÀV c
.
ÀÀc d
SelectorValue
ÀÀd q
)
ÀÀq r
}
ÀÀs t
)
ÀÀt u
;
ÀÀu v
return
ÃÃ 
element
ÃÃ 
;
ÃÃ 
}
ÕÕ 	
private
œœ 
object
œœ 
GetMemberValue
œœ %
(
œœ% &

MemberInfo
œœ& 0
member
œœ1 7
,
œœ7 8
object
œœ9 ?
instance
œœ@ H
)
œœH I
{
–– 	
PropertyInfo
—— 
property
—— !
=
——" #
member
——$ *
as
——+ -
PropertyInfo
——. :
;
——: ;
if
““ 
(
““ 
property
““ 
!=
““ 
null
““  
)
““  !
{
”” 
return
‘‘ 
property
‘‘ 
.
‘‘  
GetValue
‘‘  (
(
‘‘( )
instance
‘‘) 1
)
‘‘1 2
;
‘‘2 3
}
’’ 
	FieldInfo
÷÷ 
field
÷÷ 
=
÷÷ 
member
÷÷ $
as
÷÷% '
	FieldInfo
÷÷( 1
;
÷÷1 2
if
◊◊ 
(
◊◊ 
field
◊◊ 
!=
◊◊ 
null
◊◊ 
)
◊◊ 
{
ÿÿ 
return
ŸŸ 
field
ŸŸ 
.
ŸŸ 
GetValue
ŸŸ %
(
ŸŸ% &
instance
ŸŸ& .
)
ŸŸ. /
;
ŸŸ/ 0
}
⁄⁄ 
return
€€ 
null
€€ 
;
€€ 
}
‹‹ 	
private
ﬁﬁ 
void
ﬁﬁ 
SetValue
ﬁﬁ 
(
ﬁﬁ 
Type
ﬁﬁ "
containerType
ﬁﬁ# 0
,
ﬁﬁ0 1

MemberInfo
ﬁﬁ2 <
member
ﬁﬁ= C
,
ﬁﬁC D
object
ﬁﬁE K
instance
ﬁﬁL T
,
ﬁﬁT U
object
ﬁﬁV \
value
ﬁﬁ] b
)
ﬁﬁb c
{
ﬂﬂ 	
PropertyInfo
‡‡ 
property
‡‡ !
=
‡‡" #
member
‡‡$ *
as
‡‡+ -
PropertyInfo
‡‡. :
;
‡‡: ;
if
·· 
(
·· 
property
·· 
!=
·· 
null
··  
)
··  !
{
‚‚ 
var
„„ 
propertyName
„„  
=
„„! "
property
„„# +
.
„„+ ,
Name
„„, 0
;
„„0 1
SetPropertyValue
ÂÂ  
(
ÂÂ  !
containerType
ÂÂ! .
,
ÂÂ. /
propertyName
ÂÂ0 <
,
ÂÂ< =
instance
ÂÂ> F
,
ÂÂF G
value
ÂÂH M
)
ÂÂM N
;
ÂÂN O
}
ÊÊ 
	FieldInfo
ÁÁ 
field
ÁÁ 
=
ÁÁ 
member
ÁÁ $
as
ÁÁ% '
	FieldInfo
ÁÁ( 1
;
ÁÁ1 2
if
ËË 
(
ËË 
field
ËË 
!=
ËË 
null
ËË 
)
ËË 
{
ÈÈ 
var
ÍÍ 
	fieldName
ÍÍ 
=
ÍÍ 
field
ÍÍ  %
.
ÍÍ% &
Name
ÍÍ& *
;
ÍÍ* +
SetFieldValue
ÏÏ 
(
ÏÏ 
containerType
ÏÏ +
,
ÏÏ+ ,
	fieldName
ÏÏ- 6
,
ÏÏ6 7
instance
ÏÏ8 @
,
ÏÏ@ A
value
ÏÏB G
)
ÏÏG H
;
ÏÏH I
}
ÌÌ 
}
ÓÓ 	
private
 
void
 
SetPropertyValue
 %
(
% &
Type
& *
type
+ /
,
/ 0
string
1 7
propertyName
8 D
,
D E
object
F L
instance
M U
,
U V
object
W ]
value
^ c
)
c d
{
ÒÒ 	
if
ÚÚ 
(
ÚÚ 
type
ÚÚ 
!=
ÚÚ 
null
ÚÚ 
)
ÚÚ 
{
ÛÛ 
PropertyInfo
ÙÙ 
pInfo
ÙÙ "
=
ÙÙ# $
type
ÙÙ% )
.
ÙÙ) *
GetProperty
ÙÙ* 5
(
ÙÙ5 6
propertyName
ÙÙ6 B
,
ÙÙB C
BindingFlags
ÙÙD P
.
ÙÙP Q
Instance
ÙÙQ Y
|
ÙÙZ [
BindingFlags
ÙÙ\ h
.
ÙÙh i
Public
ÙÙi o
|
ÙÙp q
BindingFlags
ÙÙr ~
.
ÙÙ~ 
	NonPublicÙÙ à
)ÙÙà â
;ÙÙâ ä
var
ıı 
setter
ıı 
=
ıı 
pInfo
ıı "
?
ıı" #
.
ıı# $
GetSetMethod
ıı$ 0
(
ıı0 1
true
ıı1 5
)
ıı5 6
;
ıı6 7
if
ˆˆ 
(
ˆˆ 
setter
ˆˆ 
!=
ˆˆ 
null
ˆˆ "
)
ˆˆ" #
{
˜˜ 
setter
¯¯ 
.
¯¯ 
Invoke
¯¯ !
(
¯¯! "
instance
¯¯" *
,
¯¯* +
new
¯¯, /
object
¯¯0 6
[
¯¯6 7
]
¯¯7 8
{
¯¯9 :
value
¯¯; @
}
¯¯A B
)
¯¯B C
;
¯¯C D
return
˘˘ 
;
˘˘ 
}
˙˙ 
SetPropertyValue
¸¸  
(
¸¸  !
type
¸¸! %
.
¸¸% &
BaseType
¸¸& .
,
¸¸. /
propertyName
¸¸0 <
,
¸¸< =
instance
¸¸> F
,
¸¸F G
value
¸¸H M
)
¸¸M N
;
¸¸N O
}
˝˝ 
else
˛˛ 
{
ˇˇ 
throw
ÄÄ 
new
ÄÄ 
	Exception
ÄÄ #
(
ÄÄ# $
$"
ÄÄ$ &'
SpecDrill: Could not set 
ÄÄ& ?
{
ÄÄ? @
propertyName
ÄÄ@ L
}
ÄÄL M
"
ÄÄM N
)
ÄÄN O
;
ÄÄO P
}
ÅÅ 
}
ÇÇ 	
private
ÑÑ 
void
ÑÑ 
SetFieldValue
ÑÑ "
(
ÑÑ" #
Type
ÑÑ# '
type
ÑÑ( ,
,
ÑÑ, -
string
ÑÑ. 4
	fieldName
ÑÑ5 >
,
ÑÑ> ?
object
ÑÑ@ F
instance
ÑÑG O
,
ÑÑO P
object
ÑÑQ W
value
ÑÑX ]
)
ÑÑ] ^
{
ÖÖ 	
if
ÜÜ 
(
ÜÜ 
type
ÜÜ 
!=
ÜÜ 
null
ÜÜ 
)
ÜÜ 
{
áá 
	FieldInfo
àà 
pInfo
àà 
=
àà  !
type
àà" &
.
àà& '
GetField
àà' /
(
àà/ 0
	fieldName
àà0 9
,
àà9 :
BindingFlags
àà; G
.
ààG H
Instance
ààH P
|
ààQ R
BindingFlags
ààS _
.
àà_ `
Public
àà` f
|
ààg h
BindingFlags
àài u
.
ààu v
	NonPublic
ààv 
)àà Ä
;ààÄ Å
try
ää 
{
ãã 
pInfo
åå 
.
åå 
SetValue
åå "
(
åå" #
instance
åå# +
,
åå+ ,
value
åå- 2
)
åå2 3
;
åå3 4
return
çç 
;
çç 
}
éé 
catch
èè 
{
èè 
}
èè 
SetFieldValue
ëë 
(
ëë 
type
ëë "
.
ëë" #
BaseType
ëë# +
,
ëë+ ,
	fieldName
ëë- 6
,
ëë6 7
instance
ëë8 @
,
ëë@ A
value
ëëB G
)
ëëG H
;
ëëH I
}
íí 
else
ìì 
{
îî 
throw
ïï 
new
ïï 
	Exception
ïï #
(
ïï# $
$"
ïï$ &'
SpecDrill: Could not set 
ïï& ?
{
ïï? @
	fieldName
ïï@ I
}
ïïI J
"
ïïJ K
)
ïïK L
;
ïïL M
}
ññ 
}
óó 	
private
òò 
Type
òò 
GetMemberType
òò "
(
òò" #

MemberInfo
òò# -
member
òò. 4
)
òò4 5
{
ôô 	
PropertyInfo
öö 
property
öö !
=
öö" #
member
öö$ *
as
öö+ -
PropertyInfo
öö. :
;
öö: ;
if
õõ 
(
õõ 
property
õõ 
!=
õõ 
null
õõ  
)
õõ  !
return
õõ" (
property
õõ) 1
.
õõ1 2
PropertyType
õõ2 >
;
õõ> ?
	FieldInfo
úú 
field
úú 
=
úú 
member
úú $
as
úú% '
	FieldInfo
úú( 1
;
úú1 2
if
ùù 
(
ùù 
field
ùù 
!=
ùù 
null
ùù 
)
ùù 
return
ùù %
field
ùù& +
.
ùù+ ,
	FieldType
ùù, 5
;
ùù5 6
throw
üü 
new
üü 
	Exception
üü 
(
üü  
$"
üü  "W
ISpecDrill - Browser: Find attribute cannot be applied to members of type 
üü" k
{
üük l
member
üül r
.
üür s
GetType
üüs z
(
üüz {
)
üü{ |
.
üü| }
FullNameüü} Ö
}üüÖ Ü
"üüÜ á
)üüá à
;üüà â
}
°° 	
public
££ 
void
££ 
GoToUrl
££ 
(
££ 
string
££ "
url
££# &
)
££& '
{
§§ 	
browserDriver
•• 
.
•• 
GoToUrl
•• !
(
••! "
url
••" %
)
••% &
;
••& '
}
¶¶ 	
public
®® 
string
®® 
	PageTitle
®® 
{
©© 	
get
™™ 
{
™™ 
return
™™ 
browserDriver
™™ &
.
™™& '
Title
™™' ,
;
™™, -
}
™™. /
}
´´ 	
public
≠≠ 
bool
≠≠ 
IsAlertPresent
≠≠ "
=>
≠≠# %
this
≠≠& *
.
≠≠* +
browserDriver
≠≠+ 8
.
≠≠8 9
Alert
≠≠9 >
!=
≠≠? A
null
≠≠B F
;
≠≠F G
public
ØØ 
IBrowserAlert
ØØ 
Alert
ØØ "
{
∞∞ 	
get
±± 
{
≤≤ 
var
≥≥ 
alert
≥≥ 
=
≥≥ 
this
≥≥  
.
≥≥  !
browserDriver
≥≥! .
.
≥≥. /
Alert
≥≥/ 4
;
≥≥4 5
if
¥¥ 
(
¥¥ 
alert
¥¥ 
==
¥¥ 
null
¥¥ !
)
¥¥! "
throw
µµ 
new
µµ 
	Exception
µµ '
(
µµ' (
$str
µµ( F
)
µµF G
;
µµG H
return
∂∂ 
alert
∂∂ 
;
∂∂ 
}
∑∑ 
}
∏∏ 	
public
∫∫ 
bool
∫∫ 
IsJQueryDefined
∫∫ #
=>
∫∫$ &
(
∫∫' (
bool
∫∫( ,
)
∫∫, -
ExecuteJavascript
∫∫- >
(
∫∫> ?
$str
∫∫? r
)
∫∫r s
;
∫∫s t
public
ºº 
IDisposable
ºº 
ImplicitTimeout
ºº *
(
ºº* +
TimeSpan
ºº+ 3
timeout
ºº4 ;
,
ºº; <
string
ºº= C
message
ººD K
=
ººL M
null
ººN R
)
ººR S
{
ΩΩ 	
return
ææ 
new
ææ 
ImplicitWaitScope
ææ (
(
ææ( )
browserDriver
ææ) 6
,
ææ6 7
timeoutHistory
ææ8 F
,
ææF G
timeout
ææH O
,
ææO P
message
ææQ X
)
ææX Y
;
ææY Z
}
øø 	
public
ÀÀ 
SearchResult
ÀÀ 
PeekElement
ÀÀ '
(
ÀÀ' (
IElement
ÀÀ( 0
element
ÀÀ1 8
)
ÀÀ8 9
{
ÃÃ 	
var
ÕÕ 

webElement
ÕÕ 
=
ÕÕ 

WebElement
ÕÕ '
.
ÕÕ' (
Create
ÕÕ( .
(
ÕÕ. /
element
ÕÕ/ 6
.
ÕÕ6 7
Parent
ÕÕ7 =
,
ÕÕ= >
element
ÕÕ? F
.
ÕÕF G
Locator
ÕÕG N
)
ÕÕN O
;
ÕÕO P
using
ŒŒ 
(
ŒŒ 
ImplicitTimeout
ŒŒ "
(
ŒŒ" #
TimeSpan
ŒŒ# +
.
ŒŒ+ ,
FromSeconds
ŒŒ, 7
(
ŒŒ7 8
$num
ŒŒ8 ;
)
ŒŒ; <
)
ŒŒ< =
)
ŒŒ= >
{
œœ 
return
–– 

webElement
–– !
.
––! "'
NativeElementSearchResult
––" ;
;
––; <
}
—— 
}
““ 	
public
‘‘ 
void
‘‘ 
Exit
‘‘ 
(
‘‘ 
)
‘‘ 
{
’’ 	
browserDriver
÷÷ 
.
÷÷ 
Exit
÷÷ 
(
÷÷ 
)
÷÷  
;
÷÷  !
}
◊◊ 	
public
 
SearchResult
 
FindNativeElement
 -
(
- .
IElementLocator
. =
locator
> E
)
E F
{
ÒÒ 	
var
ÚÚ 
elements
ÚÚ 
=
ÚÚ 
browserDriver
ÚÚ (
.
ÚÚ( )
FindElements
ÚÚ) 5
(
ÚÚ5 6
locator
ÚÚ6 =
)
ÚÚ= >
;
ÚÚ> ?
int
ÛÛ 
index
ÛÛ 
=
ÛÛ 
$num
ÛÛ 
;
ÛÛ 
int
ÙÙ 
count
ÙÙ 
=
ÙÙ 
$num
ÙÙ 
;
ÙÙ 
if
ˆˆ 
(
ˆˆ 
locator
ˆˆ 
.
ˆˆ 
Index
ˆˆ 
.
ˆˆ 
HasValue
ˆˆ &
)
ˆˆ& '
{
˜˜ 
if
¯¯ 
(
¯¯ 
locator
¯¯ 
.
¯¯ 
Index
¯¯ !
>
¯¯" #
elements
¯¯$ ,
.
¯¯, -
Count
¯¯- 2
)
¯¯2 3
{
˘˘ 
throw
˙˙ 
new
˙˙ &
IndexOutOfRangeException
˙˙ 6
(
˙˙6 7
$"
˙˙7 9c
TSpecDrill: Browser.FindNativeElement : Not enough elements. You want element number ˙˙9 ç
{˙˙ç é
locator˙˙é ï
.˙˙ï ñ
Index˙˙ñ õ
}˙˙õ ú

 but only ˙˙ú ¶
{˙˙¶ ß
elements˙˙ß Ø
.˙˙Ø ∞
Count˙˙∞ µ
}˙˙µ ∂
 were found.˙˙∂ ¬
"˙˙¬ √
)˙˙√ ƒ
;˙˙ƒ ≈
}
˚˚ 
index
¸¸ 
=
¸¸ 
locator
¸¸ 
.
¸¸  
Index
¸¸  %
.
¸¸% &
Value
¸¸& +
;
¸¸+ ,
count
˝˝ 
=
˝˝ 
elements
˝˝  
.
˝˝  !
Count
˝˝! &
;
˝˝& '
}
˛˛ 
return
ÖÖ 
SearchResult
ÖÖ 
.
ÖÖ  
Create
ÖÖ  &
(
ÖÖ& '
elements
ÖÖ' /
.
ÖÖ/ 0
Count
ÖÖ0 5
>
ÖÖ6 7
$num
ÖÖ8 9
?
ÖÖ: ;
elements
ÖÖ< D
[
ÖÖD E
index
ÖÖE J
]
ÖÖJ K
:
ÖÖL M
null
ÖÖN R
,
ÖÖR S
elements
ÖÖT \
.
ÖÖ\ ]
Count
ÖÖ] b
)
ÖÖb c
;
ÖÖc d
}
ÜÜ 	
public
àà 
object
àà 
ExecuteJavascript
àà '
(
àà' (
string
àà( .
js
àà/ 1
,
àà1 2
params
àà3 9
object
àà: @
[
àà@ A
]
ààA B
	arguments
ààC L
)
ààL M
{
ââ 	
return
ää 
browserDriver
ää  
.
ää  !
ExecuteJavaScript
ää! 2
(
ää2 3
js
ää3 5
,
ää5 6
	arguments
ää7 @
)
ää@ A
;
ääA B
}
ãã 	
public
çç 
void
çç 
Hover
çç 
(
çç 
IElement
çç "
element
çç# *
)
çç* +
{
éé 	
browserDriver
èè 
.
èè 
MoveToElement
èè '
(
èè' (
element
èè( /
)
èè/ 0
;
èè0 1
}
êê 	
public
íí 
void
íí 
Click
íí 
(
íí 
IElement
íí "
element
íí# *
)
íí* +
{
ìì 	
browserDriver
îî 
.
îî 
Click
îî 
(
îî  
element
îî  '
)
îî' (
;
îî( )
}
ïï 	
public
ññ 
void
ññ 
DragAndDrop
ññ 
(
ññ  
IElement
ññ  (
startFromElement
ññ) 9
,
ññ9 :
IElement
ññ; C
stopToElement
ññD Q
)
ññQ R
{
óó 	
browserDriver
òò 
.
òò 
DragAndDrop
òò %
(
òò% &
startFromElement
òò& 6
,
òò6 7
stopToElement
òò8 E
)
òòE F
;
òòF G
}
ôô 	
public
õõ 
void
õõ 
RefreshPage
õõ 
(
õõ  
)
õõ  !
{
úú 	
browserDriver
ùù 
.
ùù 
RefreshPage
ùù %
(
ùù% &
)
ùù& '
;
ùù' (
}
ûû 	
public
†† 
void
†† 
MaximizePage
††  
(
††  !
)
††! "
{
°° 	
browserDriver
¢¢ 
.
¢¢ 
MaximizePage
¢¢ &
(
¢¢& '
)
¢¢' (
;
¢¢( )
}
££ 	
public
•• 
void
•• 
SwitchToDocument
•• $
(
••$ %
)
••% &
{
¶¶ 	
browserDriver
ßß 
.
ßß 
SwitchToDocument
ßß *
(
ßß* +
)
ßß+ ,
;
ßß, -
}
®® 	
void
™™ 
IBrowser
™™ 
.
™™ 
SwitchToFrame
™™ #
<
™™# $
T
™™$ %
>
™™% &
(
™™& '
IFrameElement
™™' 4
<
™™4 5
T
™™5 6
>
™™6 7"
seleniumFrameElement
™™8 L
)
™™L M
{
´´ 	
browserDriver
¨¨ 
.
¨¨ 
SwitchToFrame
¨¨ '
(
¨¨' ("
seleniumFrameElement
¨¨( <
)
¨¨< =
;
¨¨= >
}
≠≠ 	
void
ØØ 
IBrowser
ØØ 
.
ØØ 
SwitchToWindow
ØØ $
<
ØØ$ %
T
ØØ% &
>
ØØ& '
(
ØØ' (
IWindowElement
ØØ( 6
<
ØØ6 7
T
ØØ7 8
>
ØØ8 9#
seleniumWindowElement
ØØ: O
)
ØØO P
{
∞∞ 	
browserDriver
±± 
.
±± 
SwitchToWindow
±± (
(
±±( )#
seleniumWindowElement
±±) >
)
±±> ?
;
±±? @
}
≤≤ 	
public
¥¥ 
void
¥¥ 
CloseLastWindow
¥¥ #
(
¥¥# $
)
¥¥$ %
{
µµ 	
browserDriver
∂∂ 
.
∂∂ 
CloseLastWindow
∂∂ )
(
∂∂) *
)
∂∂* +
;
∂∂+ ,
}
∑∑ 	
public
ππ 
string
ππ 

GetPdfText
ππ  
(
ππ  !
)
ππ! "
{
∫∫ 	
return
ªª 
browserDriver
ªª  
.
ªª  !

GetPdfText
ªª! +
(
ªª+ ,
)
ªª, -
;
ªª- .
}
ºº 	
public
ææ 
void
ææ 
DoubleClick
ææ 
(
ææ  
IElement
ææ  (
element
ææ) 0
)
ææ0 1
=>
ææ2 4
this
ææ5 9
.
ææ9 :
browserDriver
ææ: G
.
ææG H
DoubleClick
ææH S
(
ææS T
element
ææT [
)
ææ[ \
;
ææ\ ]
public
≈≈ 
void
≈≈ 
DragAndDrop
≈≈ 
(
≈≈  
IElement
≈≈  (
startFromElement
≈≈) 9
,
≈≈9 :
int
≈≈; >
offsetX
≈≈? F
,
≈≈F G
int
≈≈H K
offsetY
≈≈L S
)
≈≈S T
{
∆∆ 	
this
«« 
.
«« 
browserDriver
«« 
.
«« 
DragAndDrop
«« *
(
««* +
startFromElement
««+ ;
,
««; <
offsetX
««= D
,
««D E
offsetY
««F M
)
««M N
;
««N O
}
»» 	
public
   
void
    
DragAndDropElement
   &
(
  & '
IElement
  ' /
startFromElement
  0 @
,
  @ A
IElement
  B J
stopToElement
  K X
)
  X Y
=>
  Z \
DragAndDrop
  ] h
(
  h i
startFromElement
  i y
,
  y z
stopToElement  { à
)  à â
;  â ä
}
ÀÀ 
}ÃÃ –>
GD:\_cloud\Dropbox\Projects\SpecDrill\SpecDrill\SpecDrill\ElementBase.cs
	namespace 	
	SpecDrill
 
{ 
public 

class 
ElementBase 
: 
IElement '
{		 
	protected

 
IElementLocator

 !
locator

" )
;

) *
	protected 
IBrowser 
browser "
=># %
	SpecDrill& /
./ 0
Browser0 7
.7 8
Instance8 @
;@ A
	protected 
IElement 
parent !
;! "
	protected 
IElement 
rootElement &
;& '
public 
ElementBase 
( 
IElement #
parent$ *
,* +
IElementLocator, ;
locator< C
)C D
{ 	
this 
. 
parent 
= 
parent  
;  !
this 
. 
locator 
= 
locator "
;" #
this 
. 
rootElement 
= 

WebElement )
.) *
Create* 0
(0 1
parent1 7
,7 8
locator9 @
)@ A
;A B
} 	
public 
SearchResult %
NativeElementSearchResult 5
{ 	
get 
{ 
return 
this 
. 
rootElement '
.' (%
NativeElementSearchResult( A
;A B
} 
} 	
public   
bool   

IsReadOnly   
{!! 	
get"" 
{## 
return$$ 
this$$ 
.$$ 
rootElement$$ '
.$$' (

IsReadOnly$$( 2
;$$2 3
}%% 
}&& 	
public(( 
bool(( 
IsAvailable(( 
{)) 	
get** 
{++ 
return,, 
this,, 
.,, 
rootElement,, '
.,,' (
IsAvailable,,( 3
;,,3 4
}-- 
}.. 	
public00 
bool00 
	IsEnabled00 
{11 	
get22 
{33 
return44 
this44 
.44 
rootElement44 '
.44' (
	IsEnabled44( 1
;441 2
}55 
}66 	
public88 
bool88 
IsDisplayed88 
{99 	
get:: 
{;; 
return<< 
this<< 
.<< 
rootElement<< '
.<<' (
IsDisplayed<<( 3
;<<3 4
}== 
}>> 	
public@@ 
IBrowser@@ 
Browser@@ 
{AA 	
getBB 
{CC 
returnDD 
thisDD 
.DD 
browserDD #
;DD# $
}EE 
}FF 	
publicHH 
virtualHH 
stringHH 
TextHH "
{II 	
getJJ 
{KK 
returnLL 
thisLL 
.LL 
rootElementLL '
.LL' (
TextLL( ,
;LL, -
}MM 
}NN 	
publicPP 
IElementPP 
ParentPP 
{QQ 	
getRR 
{SS 
returnTT 
thisTT 
.TT 
parentTT "
;TT" #
}UU 
}VV 	
publicXX 
IElementLocatorXX 
LocatorXX &
=>XX' )
thisXX* .
.XX. /
locatorXX/ 6
;XX6 7
publicZZ 
IPageZZ 
ContainingPageZZ #
=>ZZ$ &
thisZZ' +
.ZZ+ ,
rootElementZZ, 7
.ZZ7 8
ContainingPageZZ8 F
;ZZF G
public\\ 
int\\ 
Count\\ 
{]] 	
get^^ 
{__ 
return`` 
this`` 
.`` 
rootElement`` '
.``' (
Count``( -
;``- .
}aa 
}bb 	
publicdd 
voiddd 
DoubleClickdd 
(dd  
booldd  $
waitForSilencedd% 3
=dd4 5
falsedd6 ;
)dd; <
=>dd= ?
thisdd@ D
.ddD E
rootElementddE P
.ddP Q
DoubleClickddQ \
(dd\ ]
waitForSilencedd] k
)ddk l
;ddl m
publicff 
voidff 
Clickff 
(ff 
boolff 
waitForSilenceff -
=ff. /
falseff0 5
)ff5 6
=>ff7 9
thisff: >
.ff> ?
rootElementff? J
.ffJ K
ClickffK P
(ffP Q
waitForSilenceffQ _
)ff_ `
;ff` a
publichh 
IElementhh 
SendKeyshh  
(hh  !
stringhh! '
keyshh( ,
,hh, -
boolhh. 2
waitForSilencehh3 A
=hhB C
falsehhD I
)hhI J
{ii 	
returnjj 
thisjj 
.jj 
rootElementjj #
.jj# $
SendKeysjj$ ,
(jj, -
keysjj- 1
,jj1 2
waitForSilencejj3 A
)jjA B
;jjB C
}kk 	
publicmm 
voidmm 
Blurmm 
(mm 
boolmm 
waitForSilencemm ,
=mm- .
falsemm/ 4
)mm4 5
{nn 	
thisoo 
.oo 
rootElementoo 
.oo 
Bluroo !
(oo! "
waitForSilenceoo" 0
)oo0 1
;oo1 2
}qq 	
publicss 
IElementss 
Clearss 
(ss 
boolss "
waitForSilencess# 1
=ss2 3
falsess4 9
)ss9 :
{tt 	
returnuu 
thisuu 
.uu 
rootElementuu #
.uu# $
Clearuu$ )
(uu) *
waitForSilenceuu* 8
)uu8 9
;uu9 :
}vv 	
publicxx 
stringxx 
GetAttributexx "
(xx" #
stringxx# )
attributeNamexx* 7
)xx7 8
{yy 	
returnzz 
thiszz 
.zz 
rootElementzz #
.zz# $
GetAttributezz$ 0
(zz0 1
attributeNamezz1 >
)zz> ?
;zz? @
}{{ 	
public}} 
string}} 
GetCssValue}} !
(}}! "
string}}" (
cssValueName}}) 5
)}}5 6
{~~ 	
return 
this 
. 
rootElement #
.# $
GetCssValue$ /
(/ 0
cssValueName0 <
)< =
;= >
}
ÄÄ 	
public
ÇÇ 
void
ÇÇ 
Hover
ÇÇ 
(
ÇÇ 
bool
ÇÇ 
waitForSilence
ÇÇ -
=
ÇÇ. /
false
ÇÇ0 5
)
ÇÇ5 6
{
ÉÉ 	
this
ÑÑ 
.
ÑÑ 
rootElement
ÑÑ 
.
ÑÑ 
Hover
ÑÑ "
(
ÑÑ" #
waitForSilence
ÑÑ# 1
)
ÑÑ1 2
;
ÑÑ2 3
}
ÖÖ 	
public
áá 
void
áá 
DragAndDropTo
áá !
(
áá! "
IElement
áá" *
target
áá+ 1
)
áá1 2
{
àà 	
this
ââ 
.
ââ 
rootElement
ââ 
.
ââ 
DragAndDropTo
ââ *
(
ââ* +
target
ââ+ 1
)
ââ1 2
;
ââ2 3
}
ää 	
public
åå 
void
åå 
DragAndDropAt
åå !
(
åå! "
int
åå" %
offsetX
åå& -
,
åå- .
int
åå/ 2
offsetY
åå3 :
)
åå: ;
{
çç 	
this
éé 
.
éé 
rootElement
éé 
.
éé 
DragAndDropAt
éé *
(
éé* +
offsetX
éé+ 2
,
éé2 3
offsetY
éé4 ;
)
éé; <
;
éé< =
}
èè 	
}
ëë 
}íí ü
CD:\_cloud\Dropbox\Projects\SpecDrill\SpecDrill\SpecDrill\Locator.cs
	namespace 	
	SpecDrill
 
{ 
public 

class 
ElementLocator 
{ 
public 
static 
IElementLocator %
Create& ,
(, -
By- /
locatorKind0 ;
,; <
string= C
locatorValueD P
)P Q
{		 	
return

 
new

 "
SeleniumElementLocator

 -
(

- .
locatorKind

. 9
,

9 :
locatorValue

; G
)

G H
;

H I
} 	
} 
} ˛
SD:\_cloud\Dropbox\Projects\SpecDrill\SpecDrill\SpecDrill\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str $
)$ %
]% &
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str )
)) *
]* +
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str &
)& '
]' (
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *ê
FD:\_cloud\Dropbox\Projects\SpecDrill\SpecDrill\SpecDrill\WebControl.cs
	namespace 	
	SpecDrill
 
{		 
public

 

class

 

WebControl

 
:

 
ElementBase

 )
,

) *
IControl

+ 3
{ 
public 

WebControl 
( 
IElement "
parent# )
,) *
IElementLocator+ :
locator; B
)B C
:D E
baseF J
(J K
parentK Q
,Q R
locatorS Z
)Z [
{ 	
} 	
public 
bool 
IsLoaded 
{ 	
get 
{ 
return 
this 
. 
rootElement '
.' (
IsAvailable( 3
;3 4
} 
} 	
} 
} ¸,
SD:\_cloud\Dropbox\Projects\SpecDrill\SpecDrill\SpecDrill\WebControls\ListElement.cs
	namespace		 	
	SpecDrill		
 
.		 
WebControls		 
{

 
public 

	interface 
IListElement !
<! "
T" #
># $
:% &
IReadOnlyList' 4
<4 5
T5 6
>6 7
where 
T 
: 
class 
, 
IElement !
{ 
T 	
GetElementByText
 
( 
string !
regex" '
)' (
;( )
} 
public 

class 
ListElement 
< 
T 
> 
:  !

WebControl" ,
,, -
IListElement. :
<: ;
T; <
>< =
where 
T 
: 
class" '
,' (
IElement) 1
{ 
public 
ListElement 
( 
IElement #
parent$ *
,* +
IElementLocator, ;
locator< C
)C D
:E F
baseG K
(K L
parentL R
,R S
locatorT [
)[ \
{ 	
this 
. 
parent 
= 
parent  
;  !
this 
. 
locator 
= 
locator "
;" #
if 
( 
locator 
. 
LocatorType #
!=$ &
By' )
.) *
XPath* /
&&0 2
locator3 :
.: ;
LocatorType; F
!=G I
ByJ L
.L M
CssSelectorM X
)X Y
throw 
new 
ArgumentException +
(+ ,
$str, s
)s t
;t u
} 	
public 
T 
this 
[ 
int 
index 
]  
{ 	
get 
{ 
if   
(   
index   
<   
$num   
)   
throw!! 
new!! $
IndexOutOfRangeException!! 6
(!!6 7
$str!!7 d
)!!d e
;!!e f
if"" 
("" 
index"" 
>"" 
Count"" !
)""! "
throw## 
new## $
IndexOutOfRangeException## 6
(##6 7
$str##7 R
)##R S
;##S T
return%% 

WebElement%% !
.%%! "
CreateControl%%" /
<%%/ 0
T%%0 1
>%%1 2
(%%2 3
parent%%3 9
,%%9 :
locator%%; B
.%%B C
CopyWithIndex%%C P
(%%P Q
index%%Q V
)%%V W
)%%W X
;%%X Y
}&& 
}'' 	
public)) 
T)) 
GetElementByIndex)) "
())" #
int))# &
index))' ,
))), -
{** 	
return++ 
this++ 
[++ 
index++ 
]++ 
;++ 
},, 	
public00 
new00 
bool00 

IsReadOnly00 "
=>00# %
true00& *
;00* +
public22 
T22 
GetElementByText22 !
(22! "
string22" (
regex22) .
)22. /
{33 	
var44 
match44 
=44 
this44 
.44 
FirstOrDefault44 +
(44+ ,
item44, 0
=>441 3
Regex444 9
.449 :
IsMatch44: A
(44A B
item44B F
.44F G
Text44G K
,44K L
regex44M R
)44R S
)44S T
;44T U
if66 
(66 
match66 
==66 
default66  
(66  !
T66! "
)66" #
)66# $
throw77 
new77 
	Exception77 #
(77# $
$"77$ &,
 SpecDrill: No element matching '77& F
{77F G
regex77G L
}77L M
' was found!77M Y
"77Y Z
)77Z [
;77[ \
return99 
match99 
;99 
}:: 	
IEnumeratorCC 
IEnumerableCC 
.CC  
GetEnumeratorCC  -
(CC- .
)CC. /
{DD 	
returnEE 
thisEE 
.EE 

EnumeratorEE "
;EE" #
}FF 	
publicHH 
IEnumeratorHH 
<HH 
THH 
>HH 
GetEnumeratorHH +
(HH+ ,
)HH, -
{II 	
returnJJ 
thisJJ 
.JJ 

EnumeratorJJ "
;JJ" #
}KK 	
privateMM 
IEnumeratorMM 
<MM 
TMM 
>MM 

EnumeratorMM )
{NN 	
getOO 
{OO 
ifPP 
(PP 
thisPP 
.PP 
CountPP 
>PP  
$numPP! "
)PP" #
{QQ 
forRR 
(RR 
intRR 
iRR 
=RR  
$numRR! "
;RR" #
iRR$ %
<=RR& (
thisRR) -
.RR- .
CountRR. 3
;RR3 4
iRR5 6
++RR6 8
)RR8 9
{SS 
varTT 
currentElementTT *
=TT+ ,
thisTT- 1
[TT1 2
iTT2 3
]TT3 4
;TT4 5
yieldUU 
returnUU $
currentElementUU% 3
;UU3 4
}VV 
}WW 
}XX 
}YY 	
}ZZ 
}[[ U
SD:\_cloud\Dropbox\Projects\SpecDrill\SpecDrill\SpecDrill\WebControls\TreeControl.cs≥'
FD:\_cloud\Dropbox\Projects\SpecDrill\SpecDrill\SpecDrill\WebElement.cs
	namespace 	
	SpecDrill
 
{ 
public 

class 

WebElement 
{ 
public 
static 
IElement 
Create %
(% &
IElement& .
parent/ 5
,5 6
IElementLocator7 F
locatorG N
)N O
{ 	
return 
new 
SeleniumElement &
(& '
Browser' .
.. /
Instance/ 7
,7 8
parent9 ?
,? @
locatorA H
)H I
;I J
} 	
public 
static 
ISelectElement $
CreateSelect% 1
(1 2
IElement2 :
parent; A
,A B
IElementLocatorC R
locatorS Z
)Z [
{ 	
return 
new !
SeleniumSelectElement ,
(, -
Browser- 4
.4 5
Instance5 =
,= >
parent? E
,E F
locatorG N
)N O
;O P
} 	
public 
static 
INavigationElement (
<( )
T) *
>* +
CreateNavigation, <
<< =
T= >
>> ?
(? @
IElement@ H
parentI O
,O P
IElementLocatorQ `
locatora h
)h i
where 
T 
: 
class 
, 
IPage "
{ 	
return 
new %
SeleniumNavigationElement 0
<0 1
T1 2
>2 3
(3 4
Browser4 ;
.; <
Instance< D
,D E
parentF L
,L M
locatorN U
)U V
;V W
} 	
public 
static 
ListElement !
<! "
T" #
># $

CreateList% /
</ 0
T0 1
>1 2
(2 3
IElement3 ;
parent< B
,B C
IElementLocatorD S
elementLocatorT b
)b c
where   
T   
:   

WebControl    
{!! 	
return"" 
new"" 
ListElement"" "
<""" #
T""# $
>""$ %
(""% &
parent""& ,
,"", -
elementLocator"". <
)""< =
;""= >
}## 	
public%% 
static%% 
IFrameElement%% #
<%%# $
T%%$ %
>%%% &
CreateFrame%%' 2
<%%2 3
T%%3 4
>%%4 5
(%%5 6
IElement%%6 >
parent%%? E
,%%E F
IElementLocator%%G V
locator%%W ^
)%%^ _
where&& 
T&& 
:&& 
class&& 
,&& 
IPage&& !
{'' 	
return(( 
new((  
SeleniumFrameElement(( +
<((+ ,
T((, -
>((- .
(((. /
Browser((/ 6
.((6 7
Instance((7 ?
,((? @
parent((A G
,((G H
locator((I P
)((P Q
;((Q R
})) 	
public++ 
static++ 
IWindowElement++ $
<++$ %
T++% &
>++& '
CreateWindow++( 4
<++4 5
T++5 6
>++6 7
(++7 8
IElement++8 @
parent++A G
,++G H
IElementLocator++I X
locator++Y `
)++` a
where,, 
T,, 
:,, 
class,, 
,,, 
IPage,, "
{-- 	
return.. 
new.. !
SeleniumWindowElement.. ,
<.., -
T..- .
>... /
(../ 0
Browser..0 7
...7 8
Instance..8 @
,..@ A
parent..B H
,..H I
locator..J Q
)..Q R
;..R S
}// 	
public11 
static11 
T11 
CreateControl11 %
<11% &
T11& '
>11' (
(11( )
IElement11) 1
parent112 8
,118 9
IElementLocator11: I
elementLocator11J X
)11X Y
where22 
T22 
:22 
class22 
,22 
IElement22 %
{33 	
var44 
control44 
=44 
	Activator44 #
.44# $
CreateInstance44$ 2
(442 3
typeof443 9
(449 :
T44: ;
)44; <
,44< =
parent44> D
,44D E
elementLocator44F T
)44T U
as44V X
T44Y Z
;44Z [
return55 
Browser55 
.55 
Instance55 #
.55# $
CreateControl55$ 1
(551 2
control552 9
)559 :
;55: ;
}66 	
}77 
}88 ⁄
CD:\_cloud\Dropbox\Projects\SpecDrill\SpecDrill\SpecDrill\PdfPage.cs
	namespace 	
	SpecDrill
 
{ 
public 

class 
PdfPage 
: 
WebPage "
{ 
	protected 
ILogger 
Log 
= 
Infrastructure  .
.. /
Logging/ 6
.6 7
Log7 :
.: ;
Get; >
<> ?
PdfPage? F
>F G
(G H
)H I
;I J
private 
string 
titlePattern #
;# $
public 
PdfPage 
( 
) 
: 
this 
(  
string  &
.& '
Empty' ,
), -
{. /
}1 2
public 
PdfPage 
( 
string 
titlePattern *
)* +
:, -
base. 2
(2 3
titlePattern3 ?
)? @
{ 	
this 
. 
titlePattern 
= 
titlePattern  ,
;, -
} 	
public 
override 
string 
Text #
{ 	
get   
{!! 
return"" 
Browser"" 
."" 

GetPdfText"" )
("") *
)""* +
;""+ ,
}## 
}$$ 	
}%% 
}&& Í'
CD:\_cloud\Dropbox\Projects\SpecDrill\SpecDrill\SpecDrill\WebPage.cs
	namespace 	
	SpecDrill
 
{ 
public 

class 
WebPage 
: 
ElementBase &
,& '
IPage( -
{ 
	protected 
ILogger 
Log 
= 
Infrastructure  .
.. /
Logging/ 6
.6 7
Log7 :
.: ;
Get; >
<> ?
WebPage? F
>F G
(G H
)H I
;I J
private 
string 
titlePattern #
;# $
public 
WebPage 
( 
) 
: 
this 
(  
string  &
.& '
Empty' ,
), -
{. /
}1 2
public 
WebPage 
( 
string 
titlePattern *
)* +
:, -
base. 2
(2 3
null3 7
,7 8
ElementLocator9 G
.G H
CreateH N
(N O
ByO Q
.Q R
TagNameR Y
,Y Z
$str[ a
)a b
)b c
{ 	
this 
. 
titlePattern 
= 
titlePattern  ,
;, -
} 	
public 
string 
Title 
{ 	
get   
{!! 
string"" 
retrievedTitle"" %
=""& '
null""( ,
;"", -
try## 
{$$ 
retrievedTitle%% "
=%%# $
this%%% )
.%%) *
Browser%%* 1
.%%1 2
ExecuteJavascript%%2 C
(%%C D
$str%%D \
)%%\ ]
as%%^ `
string%%a g
;%%g h
}&& 
catch'' 
('' 
	Exception''  
e''! "
)''" #
{(( 
Log)) 
.)) 
Error)) 
()) 
$str)) 7
,))7 8
e))9 :
))): ;
;)); <
}** 
return++ 
retrievedTitle++ %
;++% &
},, 
}-- 	
public66 
virtual66 
bool66 
IsLoaded66 $
{77 	
get88 
{99 
object:: 
result:: 
=:: 
this;; 
.;; 
Browser;; 
.;; 
ExecuteJavascript;; .
(;;. /
$str;V/ 
)VV 
;VV 
varXX 
isLoadedXX 
=XX 
thisXX #
.XX# $
TitleXX$ )
!=XX* ,
nullXX- 1
&&XX2 4
RegexYY $
.YY$ %
IsMatchYY% ,
(YY, -
thisYY- 1
.YY1 2
TitleYY2 7
,YY7 8
thisYY9 =
.YY= >
titlePatternYY> J
)YYJ K
;YYK L
Log[[ 
.[[ 
Info[[ 
([[ 
$str[[ Z
,[[Z [
isLoaded[[\ d
,[[d e
this[[f j
.[[j k
Title[[k p
??[[q s
$str[[t |
,[[| }
this\\ 
.\\ 
titlePattern\\ %
??\\& (
$str\\) 1
)\\1 2
;\\2 3
return`` 
isLoaded`` 
;``  
}bb 
}cc 	
publicee 
PageContextTypesee 
ContextTypeee  +
{ee, -
getee. 1
;ee1 2
setee3 6
;ee6 7
}ee8 9
publicgg 
voidgg 
RefreshPagegg 
(gg  
)gg  !
{hh 	
browserii 
.ii 
RefreshPageii 
(ii  
)ii  !
;ii! "
Waitjj 
.jj 
Untiljj 
(jj 
(jj 
)jj 
=>jj 
thisjj !
.jj! "
IsLoadedjj" *
)jj* +
;jj+ ,
thiskk 
.kk 
WaitForSilencekk 
(kk  
)kk  !
;kk! "
}ll 	
publicnn 
virtualnn 
voidnn 
WaitForSilencenn *
(nn* +
)nn+ ,
{oo 	
}pp 	
publicrr 
voidrr 
Disposerr 
(rr 
)rr 
{ss 	
iftt 
(tt 
thistt 
.tt 
ContextTypett  
==tt! #
PageContextTypestt$ 4
.tt4 5
Framett5 :
)tt: ;
{uu 
browservv 
.vv 
SwitchToDocumentvv (
(vv( )
)vv) *
;vv* +
}ww 
elsexx 
ifxx 
(xx 
thisxx 
.xx 
ContextTypexx %
==xx& (
PageContextTypesxx) 9
.xx9 :
Windowxx: @
)xx@ A
{yy 
browserzz 
.zz 
CloseLastWindowzz '
(zz' (
)zz( )
;zz) *
}{{ 
}~~ 	
}
ÑÑ 
}ÖÖ 